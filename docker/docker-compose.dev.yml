version: "3.9"

services:

  backend:
    image: tabletop_board_backend_dev
    build:
      context: ..
      dockerfile: docker/backend/dev.Dockerfile
    container_name: tabletop_board_backend_local
    env_file: ../dev.env
    restart: unless-stopped
    volumes:
      - ..:/app/
    depends_on:
      - db
      - redis
      - minio-storage
    working_dir: "/app/backend"
    expose:
      - 8000
    ports:
      - "8000:8000"
    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    labels:
      "docker_compose_diagram.icon": "django"


  db:
    image: postgres:11
    container_name: tabletop_board_db_local
    restart: unless-stopped
    volumes:
      - ../volumes_data/db:/var/lib/postgresql/data
    env_file:
      - ../dev.env


  minio-storage:
    image: minio/minio:latest
    container_name: tabletop_board_minio_storage_local
    entrypoint: sh
    restart: unless-stopped
    command: -c 'mkdir -p /data/tabletop_board && /usr/bin/minio server /data'
    ports:
      - "9000:9000"
    expose:
      - 9000
    volumes:
      - s3_storage:/data
    environment:
      VIRTUAL_PORT: 9000
      MINIO_ACCESS_KEY: DEVELOP_ACCESS_KEY
      MINIO_SECRET_KEY: DEVELOP_SECRET_KEY
    labels:
      "docker_compose_diagram.icon": "s3"

  redis:
    image: redis:alpine
    container_name: tabletop_board_redis_local
    restart: unless-stopped
    expose:
      - "6379"

volumes:
  s3_storage:
